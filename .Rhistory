df <- tibble::tibble(id = ids, data = data) %>%
dplyr::mutate(data = purrr::map(data, ~ tidyr::separate_rows(.x, sep = ",")))
View(df)
View(df[[2]][[1]])
# Split the cells in the data column by comma and create a tibble
df <- tibble::tibble(id = ids, data = data) %>%
dplyr::mutate(data = purrr::map(data, ~ tidyr::separate_rows(.x, sep = ",")))
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Split the cells in the data column by comma and create a tibble
df <- tibble(id = ids, data = data) %>%
mutate(data = map(data, ~ separate_rows(.x, sep = ",")))
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Create a tibble with the ID and data columns
df <- tibble(id = ids, data = data)
df <- df %>%
mutate(data = map(data, ~ as_tibble(map(str_split(.x, ",", simplify = TRUE), as.character))))
View(df)
View(df[[2]][[1]])
View(data)
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- strsplit(text, ",")  # Split text at commas
data.frame(text, stringsAsFactors = FALSE)  # Create data frame
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Create a tibble with the ID and data columns
df <- tibble(id = ids, data = data)
View(data)
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
text <- strsplit(text, ",")
read_table(text, col_types = cols(.default = col_character()))
})
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)
text <- strsplit(text, ",")  # Split text at commas
data.frame(text, stringsAsFactors = FALSE)  # Create data frame
})
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- strsplit(text, ",")  # Split text at commas
data.frame(text, stringsAsFactors = FALSE)  # Create data frame
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Create a tibble with the ID and data columns
df <- tibble(id = ids, data = data)
View(data)
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Access the individual data frames in the list
# Example: Access the first data frame
first_data_frame <- data[[1]]
df <- tibble(files, data) %>%
mutate(id = str_extract(.[[1, 1]], "\\d+")) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
text <- strsplit(text, ",")
read_table(text, col_types = cols(.default = col_character()))
})
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
text <- strsplit(text, ",")
data.frame(text, stringsAsFactors = FALSE)  # Create data frame from the split text
})
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
text <- strsplit(text, ",")
max_length <- max(lengths(text))  # Find the maximum number of elements in the split text
text <- lapply(text, function(x) c(x, rep("", max_length - length(x))))  # Pad shorter vectors with empty strings
data.frame(text, stringsAsFactors = FALSE)  # Create data frame from the split text
})
# Access the individual data frames in the list
# Example: Access the first data frame
first_data_frame <- data[[1]]
df <- tibble(files, data) %>%
mutate(id = str_extract(.[[1, 1]], "\\d+")) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
text <- strsplit(text, ",")
max_length <- max(lengths(text))  # Find the maximum number of elements in the split text
text <- lapply(text, function(x) c(x, rep("", max_length - length(x))))  # Pad shorter vectors with empty strings
data.frame(text, stringsAsFactors = FALSE)  # Create data frame from the split text
})
# Access the individual data frames in the list
# Example: Access the first data frame
first_data_frame <- data[[1]]
df <- tibble(files, data) %>%
mutate(id = str_extract(.[[1, 1]], "\\d+")) %>%
select(id, data) %>%
t()
View(df)
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
text <- strsplit(text, ",")
max_length <- max(lengths(text))  # Find the maximum number of elements in the split text
text <- lapply(text, function(x) c(x, rep("", max_length - length(x))))  # Pad shorter vectors with empty strings
data.frame(t(data), stringsAsFactors = FALSE)  # Transpose the data frame
})
# Access the individual data frames in the list
# Example: Access the first data frame
first_data_frame <- data[[1]]
df <- tibble(files, data) %>%
mutate(id = str_extract(.[[1, 1]], "\\d+")) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
View((df[[2]][[1]])[[1]][[1]])
View((df[[2]][[1]])[[1]][[1]])
View((df[[2]][[1]])[[2]][[1]])
View((df[[2]][[1]])[[3]][[1]])
View((df[[2]][[1]])[[4]][[1]])
typeof(df)
View(df[[2]][[1]])
View(data)
View(df)
# Access the 'data' list inside the 'df' list
data_list <- df$data
# Transpose the data inside each list in 'data_list'
transposed_data_list <- lapply(data_list, function(data) t(data))
# Update the 'data' list in 'df' with the transposed data
df$data <- transposed_data_list
View(df)
View(df[[2]][[1]])
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Access the individual data frames in the list
# Example: Access the first data frame
first_data_frame <- data[[1]]
df <- tibble(files, data) %>%
mutate(id = str_extract(.[[1, 1]], "\\d+")) %>%
select(id, data)
View(df)
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Access the individual data frames in the list
# Example: Access the first data frame
first_data_frame <- data[[1]]
df <- tibble(files, data) %>%
mutate(id = str_extract(.[1, 1], "\\d+(?=,)")) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Split the cells in the data column by comma and create a tibble
df <- tibble(id = ids, data = data) %>%
mutate(data = map(data, ~ separate_rows(.x, sep = ",")))
View(df)
View(df[[2]][[1]])
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Split the cells in the data column by comma and create a tibble
df <- tibble(id = ids, data = data) %>%
mutate(data = map(data, ~ separate_rows(.x, sep = ",")))
data_list <- df$data
# Split the columns using commas
split_data_list <- lapply(data_list, function(data) {
data_split <- strsplit(data, ",")
data_split <- lapply(data_split, unlist)  # Convert split columns to vectors
data_split <- do.call(rbind, data_split)  # Combine split columns into a matrix
data_split
})
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Split the cells in the data column by comma and create a tibble
df <- tibble(id = ids, data = data) %>%
mutate(data = map(data, ~ separate_rows(.x, sep = ",")))
data_list <- df$data
# Split the columns using commas
split_data_list <- lapply(data_list, function(data) {
data <- as.character(data)  # Convert data to character
data_split <- strsplit(data, ",")
data_split <- lapply(data_split, unlist)  # Convert split columns to vectors
data_split <- do.call(rbind, data_split)  # Combine split columns into a matrix
data_split
})
# Put the modified data back into 'df'
df$data <- split_data_list
View(df)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)
text <- strsplit(data, ",")
read_table(text, col_types = cols(.default = col_character()))
})
# Specify the directory path
directory_path <- "./Data/Pilot"
# Get the list of all TXT files in the directory
files <- list.files(directory_path, pattern = "*.txt", full.names = TRUE)
# Read the TXT files into a list of data frames
data <- map(files, function(file) {
text <- readLines(file)
text <- gsub(" ", ",", text)  # Replace spaces with commas
read_table(text, col_types = cols(.default = col_character()))
})
# Extract the ID from the first column of the first row for each data frame
ids <- map_chr(data, ~ str_extract(.[1, 1], "\\d+(?=,)"))
# Split the cells in the data column by comma and create a tibble
df <- tibble(id = ids, data = data) %>%
mutate(data = map(data, ~ separate_rows(.x, sep = ",")))
View(data_list)
View(df)
View(df[[2]][[1]])
setwd("~/Data/Pilot")
# Specify the directory path
txt_to_csv <- function(file) {
data <- readLines(file)
data <- gsub(" ", ",", data)  # Replace spaces with commas
data <- strsplit(data, ",")
data <- do.call(rbind, data)
write.csv(data, paste0(filetools::file_path_sans_ext(file), ".csv"), row.names = FALSE)
}
files <- list.files(pattern = "*.txt")
lapply(files, txt_to_csv)
View(txt_to_csv)
View(txt_to_csv)
# Specify the directory path
txt_to_csv <- function(file) {
data <- readLines(file)
data <- gsub(" ", ",", data)  # Replace spaces with commas
data <- strsplit(data, ",")
data <- do.call(rbind, data)
write.csv(data, paste0(tools::file_path_sans_ext(file), ".csv"), row.names = FALSE)
}
# Get a list of all text files in the directory
files <- list.files(pattern = "*.txt")
# Convert each text file to CSV
lapply(files, txt_to_csv)
files <- list.files(directory_path, pattern = "*.csv", full.names = TRUE)
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
data
View(data)
df <- tibble(files, data) %>%
mutate(id = str_extract(files, 'P[0-9]+')) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
df <- tibble(files, data) %>%
mutate(id = map_chr(data, ~ .[2, 1])) %>%
select(id, data)
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
data
df <- tibble(files, data) %>%
mutate(id = map_chr(data, ~ .[2, 1])) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
View(data)
View(data_list)
df <- tibble(files, data) %>%
mutate(id = str_extract(.[1, 1], "\\d+(?=,)")) %>%
select(id, data)
View(df)
View(df[[2]][[1]])
df$id[i] <- second_row
for (i in seq_along(df$data)) {
second_row <- df$data[[i]][2, 1]
df$id[i] <- second_row
}
View(df)
View(df[[2]][[1]])
View(df[[2]][[1]])
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
data
df <- tibble(files, data) %>%
select(id, data)
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
data
df <- tibble(files, data) %>%
mutate(id = str_extract(.[1, 1], "\\d+(?=,)")) %>%
select(id, data)
for (i in seq_along(df$data)) {
second_row <- df$data[[i]][2, 1]
df$id[i] <- second_row
}
df <- df %>%
mutate(condition = map_chr(data, ~ .[2, 3]))
View(df)
for (i in seq_along(df$data)) {
second_row <- df$data[[i]][2, 1]
df$id[i] <- second_row
column <- df$data[[i]][2, 3]
df$column[i] <- column
}
View(df)
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
data
df <- tibble(files, data) %>%
mutate(id = str_extract(.[1, 1], "\\d+(?=,)")) %>%
select(id, data)
for (i in seq_along(df$data)) {
second_row <- df$data[[i]][2, 1]
df$id[i] <- second_row
condition <- df$data[[i]][2, 3]
df$condition[i] <- condition
}
View(df)
# Get a list of all CSV files in the directory
files <- list.files(pattern = "*.csv", full.names = TRUE)
# Read CSV files into a list of data frames and extract the ID
df <- tibble(files) %>%
mutate(data = map(files, ~ read_csv(.)),
id = str_extract(.[[1]][1, 1], "\\d+(?=,)")) %>%
select(id, data)
df <- df %>%
mutate(condition = map_chr(data, ~ {
condition <- .[2, 3]
id_count <- sum(id == .[1, 1])
condition <- paste0("condition ", id_count)
condition
}))
# Get a list of all CSV files in the directory
files <- list.files(pattern = "*.csv", full.names = TRUE)
# Read CSV files into a list of data frames and extract the ID
df <- tibble(files) %>%
mutate(data = map(files, ~ read_csv(.)),
id = str_extract(.[[1]][1, 1], "\\d+(?=,)")) %>%
select(id, data)
# Get a list of all CSV files in the directory
files <- list.files(pattern = "*.csv", full.names = TRUE)
# Read CSV files into a list of data frames and extract the ID
df <- tibble(files) %>%
mutate(data = map(files, ~ read_csv(.)),
id = map_chr(data, ~ .[1, 1] %>% str_extract("\\d+(?=,)"))) %>%
select(id, data)
# Update the text in the "Condition" column
df <- df %>%
mutate(condition = map_chr(data, ~ {
condition <- .[2, 3]
id_count <- sum(id == .[1, 1])
condition <- paste0("condition ", id_count)
condition
}))
# Print the resulting data frame
df
View(df)
View(df[[2]][[1]])
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
data
df <- tibble(files, data) %>%
mutate(id = str_extract(.[1, 1], "\\d+(?=,)")) %>%
select(id, data)
for (i in seq_along(df$data)) {
second_row <- df$data[[i]][2, 1]
df$id[i] <- second_row
condition <- df$data[[i]][2, 3]
df$condition[i] <- condition
}
View(df)
files <- list.files(pattern = "*.csv", full.names = TRUE)
data <- map(files, ~ read_csv(.)) # using a formula based on a function
df <- tibble(files, data) %>%
mutate(id = str_extract(.[1, 1], "\\d+(?=,)")) %>%
select(id, data)
for (i in seq_along(df$data)) {
second_row <- df$data[[i]][2, 1]
df$id[i] <- second_row
condition <- df$data[[i]][2, 3]
df$condition[i] <- condition
}
View(df[[2]][[1]])
